namespace SyminStudio.Binaryer.StreamSerialization;

public class BinaryerAttributeUtils
{
    public const string NamespaceStr = "SyminStudio.Binaryer.Abstractions";
    public const string StreamSerializableAttributeName = "StreamSerializableAttribute";
    public const string BinaryPropertyAttributeName = "BinaryPropertyAttribute";
    public const string BinaryRepeatAttributeName = "BinaryRepeatAttribute";
    public const string BinaryConditionAttributeName = "BinaryConditionAttribute";
    public const string BinarySkipAttributeName = "BinarySkipAttribute";
    
    // 生成 StreamSerializable 属性
    public const string SourceCodeToGen =
        $$"""
          // <auto-generated/>
          using System;
          #nullable enable
          namespace {{NamespaceStr}}
          {
              [AttributeUsage(AttributeTargets.Class)]
              public class {{StreamSerializableAttributeName}} : Attribute
              {
              }

              /// <summary>
              /// Attribute to specify that a property should be serialized as binary data or deserialized from binary data.
              /// The length of the binary data can be specified directly, or it can be derived from another property or method.
              /// If not specified, the length will be determined by the type of the property.
              /// </summary>
              [AttributeUsage(AttributeTargets.Property)]
              public class {{BinaryPropertyAttributeName}} : Attribute
              {
                  public int Length { get; set; } = -1; // -1 表示未指定长度
                  // Should be Integer type
                  public string? LengthFromProperty { get; set; }
                  // Should return Integer type
                  public string? LengthFromMethod { get; set; }
              }

              /// <summary>
              /// Attribute to specify that a property should be repeated multiple times in the binary serialization.
              /// The number of repetitions can be specified directly, or it can be derived from another property or method.
              /// Additionally, the serialization can be repeated until a certain position in the binary data is reached.
              /// If not specified, the default behavior is to repeat the property once.
              /// The repeat count can be specified directly, or it can be derived from another property or method.
              /// The repeat till position can also be specified directly, or it can be derived from another property or method.
              /// If not specified, the default behavior is to repeat until the end of the binary data.
              /// </summary>
              [AttributeUsage(AttributeTargets.Property)]
              public class {{BinaryRepeatAttributeName}} : Attribute
              {
                  public int RepeatCount { get; set; } = -1; // -1 表示未指定重复次数

                  // Should be Integer type
                  // If not specified, it will repeat once
                  public string? RepeatCountFromProperty { get; set; }

                  // Should return Integer type
                  public string? RepeatCountFromMethod { get; set; }

                  public long RepeatTillPosition { get; set; } = -1; // -1 表示未指定位置

                  // Should be Long type
                  // If not specified, it will repeat until the end of the binary data
                  public string? RepeatTillPositionFromProperty { get; set; }

                  // Should return Long type
                  public string? RepeatTillPositionFromMethod { get; set; }
              }

              /// <summary>
              /// Attribute to specify whether a property should be included in the binary serialization
              /// Based on other property which has been assigned or other method.
              /// </summary>
              [AttributeUsage(AttributeTargets.Property)]
              public class {{BinaryConditionAttributeName}} : Attribute
              {
                  // Should be Boolean type
                  public string? ConditionFromProperty { get; set; }

                  // Should return Boolean type
                  public string? ConditionFromMethod { get; set; }
              }

              /// <summary>
              /// Attribute to specify that how many bytes should be added before serializing current property,
              /// or how many bytes should be skipped before deserializing current property.
              /// Based on other property which has been assigned or other method.
              /// If not specified, it will skip 0 bytes.
              /// </summary>
              [AttributeUsage(AttributeTargets.Property, AllowMultiple = true)]
              public class {{BinarySkipAttributeName}} : Attribute
              {
                  public int Length { get; set; } = -1; // -1 表示未指定长度
                  // Should be Integer type
                  public string? LengthFromProperty { get; set; }
                  // Should return Integer type
                  public string? LengthFromMethod { get; set; }
              }
          }
          """;
}